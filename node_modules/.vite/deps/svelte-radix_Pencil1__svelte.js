import "./chunk-W6QE4LMT.js";
import {
  add_locations,
  append,
  check_target,
  comment,
  hmr,
  if_block,
  init,
  legacy_api,
  legacy_rest_props,
  ns_template,
  prop,
  set_attributes
} from "./chunk-QGPGZD3U.js";
import {
  bubble_event
} from "./chunk-CPGNEDHD.js";
import {
  child,
  event,
  first_child
} from "./chunk-E6IRYBFC.js";
import {
  getContext,
  mark_module_end,
  mark_module_start,
  pop,
  push,
  set,
  source,
  template_effect
} from "./chunk-QPAR6CJR.js";
import "./chunk-UJOSQBOZ.js";
import "./chunk-PMCBTWW3.js";
import "./chunk-JHU3233G.js";
import "./chunk-YWUGNIHA.js";
import "./chunk-DWA4UIM3.js";

// node_modules/svelte-radix/dist/Pencil1.svelte
mark_module_start();
Pencil1.filename = "node_modules/svelte-radix/dist/Pencil1.svelte";
var root_1 = add_locations(ns_template(`<svg><path fill-rule="evenodd" clip-rule="evenodd" d="M11.8536 1.14645C11.6583 0.951184 11.3417 0.951184 11.1465 1.14645L3.71455 8.57836C3.62459 8.66832 3.55263 8.77461 3.50251 8.89155L2.04044 12.303C1.9599 12.491 2.00189 12.709 2.14646 12.8536C2.29103 12.9981 2.50905 13.0401 2.69697 12.9596L6.10847 11.4975C6.2254 11.4474 6.3317 11.3754 6.42166 11.2855L13.8536 3.85355C14.0488 3.65829 14.0488 3.34171 13.8536 3.14645L11.8536 1.14645ZM4.42166 9.28547L11.5 2.20711L12.7929 3.5L5.71455 10.5784L4.21924 11.2192L3.78081 10.7808L4.42166 9.28547Z" fill="currentColor"></path></svg>`), Pencil1.filename, [[12, 2, [[31, 4]]]]);
var root_2 = add_locations(ns_template(`<svg><path fill-rule="evenodd" clip-rule="evenodd" d="M11.8536 1.14645C11.6583 0.951184 11.3417 0.951184 11.1465 1.14645L3.71455 8.57836C3.62459 8.66832 3.55263 8.77461 3.50251 8.89155L2.04044 12.303C1.9599 12.491 2.00189 12.709 2.14646 12.8536C2.29103 12.9981 2.50905 13.0401 2.69697 12.9596L6.10847 11.4975C6.2254 11.4474 6.3317 11.3754 6.42166 11.2855L13.8536 3.85355C14.0488 3.65829 14.0488 3.34171 13.8536 3.14645L11.8536 1.14645ZM4.42166 9.28547L11.5 2.20711L12.7929 3.5L5.71455 10.5784L4.21924 11.2192L3.78081 10.7808L4.42166 9.28547Z" fill="currentColor"></path></svg>`), Pencil1.filename, [[39, 2, [[49, 4]]]]);
function Pencil1($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, ["children", "$$slots", "$$events"]);
  const $$restProps = legacy_rest_props($$sanitized_props, [
    "size",
    "role",
    "color",
    "ariaLabel",
    "withEvents"
  ]);
  push($$props, false, Pencil1);
  const ctx = getContext("iconCtx") ?? {};
  let size = prop($$props, "size", 8, () => ctx.size || "24");
  let role = prop($$props, "role", 8, () => ctx.role || "img");
  let color = prop($$props, "color", 8, () => ctx.color || "currentColor");
  let ariaLabel = prop($$props, "ariaLabel", 0, "pencil 1,");
  let withEvents = prop($$props, "withEvents", 0, false);
  init();
  var fragment = comment();
  var node = first_child(fragment);
  if_block(
    node,
    withEvents,
    ($$anchor2) => {
      var svg = root_1();
      let attributes;
      var path = child(svg);
      template_effect(() => attributes = set_attributes(
        svg,
        attributes,
        {
          width: size(),
          height: size(),
          ...$$restProps,
          role: role(),
          "aria-label": ariaLabel(),
          viewBox: "0 0 15 15",
          fill: color(),
          xmlns: "http://www.w3.org/2000/svg"
        },
        false,
        ""
      ));
      event("click", svg, function($$arg) {
        bubble_event.call(this, $$props, $$arg);
      });
      event("keydown", svg, function($$arg) {
        bubble_event.call(this, $$props, $$arg);
      });
      event("keyup", svg, function($$arg) {
        bubble_event.call(this, $$props, $$arg);
      });
      event("focus", svg, function($$arg) {
        bubble_event.call(this, $$props, $$arg);
      });
      event("blur", svg, function($$arg) {
        bubble_event.call(this, $$props, $$arg);
      });
      event("mouseenter", svg, function($$arg) {
        bubble_event.call(this, $$props, $$arg);
      });
      event("mouseleave", svg, function($$arg) {
        bubble_event.call(this, $$props, $$arg);
      });
      event("mouseover", svg, function($$arg) {
        bubble_event.call(this, $$props, $$arg);
      });
      event("mouseout", svg, function($$arg) {
        bubble_event.call(this, $$props, $$arg);
      });
      append($$anchor2, svg);
    },
    ($$anchor2) => {
      var svg_1 = root_2();
      let attributes_1;
      var path_1 = child(svg_1);
      template_effect(() => attributes_1 = set_attributes(
        svg_1,
        attributes_1,
        {
          width: size(),
          height: size(),
          ...$$restProps,
          role: role(),
          "aria-label": ariaLabel(),
          viewBox: "0 0 15 15",
          fill: color(),
          xmlns: "http://www.w3.org/2000/svg"
        },
        false,
        ""
      ));
      append($$anchor2, svg_1);
    }
  );
  append($$anchor, fragment);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  const s = source(Pencil1);
  const filename = Pencil1.filename;
  Pencil1 = hmr(s);
  Pencil1.filename = filename;
  if (import.meta.hot.acceptExports) {
    import.meta.hot.acceptExports(["default"], (module) => {
      set(s, module.default);
    });
  } else {
    import.meta.hot.accept((module) => {
      set(s, module.default);
    });
  }
}
var Pencil1_default = Pencil1;
mark_module_end(Pencil1);
export {
  Pencil1_default as default
};
//# sourceMappingURL=svelte-radix_Pencil1__svelte.js.map
